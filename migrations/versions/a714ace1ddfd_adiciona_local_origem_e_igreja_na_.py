"""Adiciona local_origem e igreja na tabela visitantes

Revision ID: a714ace1ddfd
Revises: 
Create Date: 2024-09-14 12:37:59.134571

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a714ace1ddfd'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('membros', schema=None) as batch_op:
        batch_op.alter_column('cpf',
               existing_type=sa.VARCHAR(length=14),
               nullable=False)
        batch_op.alter_column('data_registro',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('data_nascimento',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               nullable=False)
        batch_op.create_unique_constraint(None, ['cpf'])
        batch_op.create_unique_constraint(None, ['nome'])
        batch_op.drop_column('endereco')
        batch_op.drop_column('telefone')
        batch_op.drop_column('data_cadastro')

    with op.batch_alter_table('visitantes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('numero', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('local_origem', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('igreja', sa.String(length=100), nullable=True))
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('data_visita',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               nullable=False)
        batch_op.drop_constraint('visitantes_nome_visitante_key', type_='unique')
        batch_op.drop_constraint('visitantes_numero_key', type_='unique')
        batch_op.drop_column('contato')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('visitantes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('contato', sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.create_unique_constraint('visitantes_numero_key', ['contato'])
        batch_op.create_unique_constraint('visitantes_nome_visitante_key', ['nome_visitante'])
        batch_op.alter_column('data_visita',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.drop_column('igreja')
        batch_op.drop_column('local_origem')
        batch_op.drop_column('numero')

    with op.batch_alter_table('membros', schema=None) as batch_op:
        batch_op.add_column(sa.Column('data_cadastro', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('telefone', sa.VARCHAR(length=15), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('endereco', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('data_nascimento',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               nullable=True)
        batch_op.alter_column('data_registro',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('cpf',
               existing_type=sa.VARCHAR(length=14),
               nullable=True)

    # ### end Alembic commands ###
